#!/usr/bin/env bash

# Combination of two great PS1's

# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

# @thcipriani's extravagent PS1 http://blog.bigdinosaur.org/easy-ps1-colors/
# Copied from https://github.com/thcipriani/dotfiles
# Screenshot: http://i.imgur.com/Hysmc.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

# Bash color codes - http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
# Refer Xterm color chart from http://en.wikipedia.org/wiki/Xterm
# 30m - Black
# 31m - Red
# 32m - Green
# 33m - Yellow
# 34m - Blue
# 35m - Purple
# 36m - Cyan
# 37m - White
# 0 - Normal
# 1 - Bold

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    BLACK=$(tput setaf 243)
    BLACKBOLD=$(tput setaf 232)
    RED=$(tput setaf 160)
    REDBOLD=$(tput setaf 196)
    GREEN=$(tput setaf 46)
    GREENBOLD=$(tput setaf 22)
    YELLOW=$(tput setaf 227)
    YELLOWBOLD=$(tput setaf 226)
    BLUE=$(tput setaf 56)
    BLUEBOLD=$(tput setaf 21)
    PURPLE=$(tput setaf 90)
    PURPLEBOLD=$(tput setaf 201)
    CYAN=$(tput setaf 51)
    CYANBOLD=$(tput setaf 44)
    WHITE=$(tput setaf 253)
    WHITEBOLD=$(tput setaf 255)
    MAGENTA=$(tput setaf 9)
    ORANGE=$(tput setaf 172)
    #GREEN=$(tput setaf 190)
    #PURPLE=$(tput setaf 141)
    #WHITE=$(tput setaf 242)
  else
    BLACK=$(tput setaf 8)
    BLACKBOLD=$(tput setaf 0)
    RED=$(tput setaf 1)
    REDBOLD=$(tput setaf 9)
    GREEN=$(tput setaf 2)
    GREENBOLD=$(tput setaf 10)
    YELLOW=$(tput setaf 3)
    YELLOWBOLD=$(tput setaf 11)
    BLUE=$(tput setaf 4)
    BLUEBOLD=$(tput setaf 12)
    PURPLE=$(tput setaf 5)
    PURPLEBOLD=$(tput setaf 13)
    CYAN=$(tput setaf 6)
    CYANBOLD=$(tput setaf 14)
    WHITE=$(tput setaf 7)
    WHITEBOLD=$(tput setaf 15)
    MAGENTA=$(tput setaf 5)
    ORANGE=$(tput setaf 4)
    #GREEN=$(tput setaf 2)
    #PURPLE=$(tput setaf 1)
    #WHITE=$(tput setaf 7)
  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
else
  BLACK="\033[0;30m"
  BLACKBOLD="\033[1;30m"
  RED="\033[0;31m"
  REDBOLD="\033[1;31m"
  GREEN="\033[0;32m"
  GREENBOLD="\033[1;32m"
  YELLOW="\033[0;33m"
  YELLOWBOLD="\033[1;33m"
  BLUE="\033[0;34m"
  BLUEBOLD="\033[1;34m"
  PURPLE="\033[0;35m"
  PURPLEBOLD="\033[1;35m"
  CYAN="\033[0;36m"
  CYANBOLD="\033[1;36m"
  WHITE="\033[0;37m"
  WHITEBOLD="\033[1;37m"
  MAGENTA="\033[1;31m"
  ORANGE="\033[1;33m"
  #GREEN="\033[1;32m"
  #PURPLE="\033[1;35m"
  #WHITE="\033[1;37m"
  BOLD=""
  RESET="\033[m"
fi

export BLACK
export BLACKBOLD
export RED
export REDBOLD
export GREEN
export GREENBOLD
export YELLOW
export YELLOWBOLD
export BLUE
export BLUEBOLD
export PURPLE
export PURPLEBOLD
export CYAN
export CYANBOLD
export WHITE
export WHITEBOLD

export MAGENTA
export ORANGE
#export GREEN
#export PURPLE
#export WHITE
export BOLD
export RESET

function parse_git_dirty() {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

#PS1="$WHITEBOLD$ $GREEN\u$WHITEBOLD@$BLUE\h$WHITEBOLD on $YELLOW\d$WHITE at $PURPLE\@$WHITEBOLD in $CYAN\w\n  $WHITE"
#PS1="\[${BOLD}${MAGENTA}\]\u \[$WHITE\]at \[$ORANGE\]\h \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$WHITE\]\n\$ \[$RESET\]"
PS1="\[$GREEN\]\u\[$WHITEBOLD\] @ \[$MAGENTA\]\h\[$WHITEBOLD\] on \[$YELLOW\]\d\[$WHITE\], \[$PURPLEBOLD\]\@\[$WHITEBOLD\] in \[$CYAN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$BLUE\]\$(parse_git_branch)\[$WHITE\]\n\[$BOLD\]\$ \[$RESET\]"
